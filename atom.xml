<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Satyam Zode]]></title>
  <link href="http://satyamz.github.io/atom.xml" rel="self"/>
  <link href="http://satyamz.github.io/"/>
  <updated>2017-06-12T15:47:41+05:30</updated>
  <id>http://satyamz.github.io/</id>
  <author>
    <name><![CDATA[Satyam Zode]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[GSoC 2016 Week 4 and 5: Reproducible Builds in Debian]]></title>
    <link href="http://satyamz.github.io/blog/2016/06/22/gsoc-2016-week-4-reproducible-builds-in-debian/"/>
    <updated>2016-06-22T16:17:13+05:30</updated>
    <id>http://satyamz.github.io/blog/2016/06/22/gsoc-2016-week-4-reproducible-builds-in-debian</id>
    <content type="html"><![CDATA[<p>This is a brief report on my last week work with Debian Reproducible Builds.</p>

<!-- more -->


<p>In week 4, I mostly worked on designing an interfaces and tackling different issues related to argument completion feature of diffoscope and in week 5 I worked on adding hiding .buildinfo from .changes files.</p>

<h3>Update for last week&rsquo;s activities</h3>

<ul>
<li>I researched different diffoscope outputs. In <a href="https://tests.reproducible-builds.org/debian/reproducible.html">reproducible-builds testing framework </a> only differences of <code>.buildinfo</code> files are given but I needed diffoscope outputs for <code>.changes</code> files. Hence, I had to <a href="https://wiki.debian.org/ReproducibleBuilds/Howto">build packages locally</a> using <a href="https://wiki.debian.org/ReproducibleBuilds/ExperimentalToolchain">our experimental tool chain</a>. My goal was to generate different outputs and to see how I can hide <code>.buildinfo</code> files from <code>.changes</code>.</li>
<li><p>I updated argument completion patch as per suggestions given by Paul Wise (pabs). Patch has been reviewed by Mattia Rizzolo, Holger Levsen and <a href="https://anonscm.debian.org/git/reproducible/diffoscope.git/commit/?id=d733cb47903c54a3c4a699131e1b7bde3e492bbf">merged</a> by    Reiner Herrmann (deki) into <a href="https://anonscm.debian.org/git/reproducible/diffoscope.git/commit/?id=77dfd8d3e5e2e5d8ba31e606ef36cbd8f2315743">diffoscope master</a>. This patch closes <a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=826711">#826711</a>. Thanks all for support.</p></li>
<li><p>For <a href="https://wiki.debian.org/ReproducibleBuilds/HideProfilesSpecification#Ignore_.60.buildinfo.60_files_when_comparing_.60.changes.60_files">Ignore <code>.buildinfo</code> files when comparing <code>.changes</code> files</a>, we finally decided to enable this by default and without having any command line option to hide.</p></li>
<li><p>Last week I researched more on <code>.changes</code> and <code>.buildinfo</code> files. After getting guidelines from Lunar I was able to understand the need of this feature. I am in the middle of implementation of this particular problem.</p></li>
</ul>


<h3>Goal for upcoming week:</h3>

<ul>
<li>Finish the implementation of <code>hiding .buildinfo from .changes</code></li>
<li>Start thinking on interfaces and discuss about different use cases.</li>
</ul>


<p>I am thankful to <a href="https://wiki.debian.org/ShirishAgarwal">Shirish Agarwal</a> for helping me through visa process. But, unfortunately I won&rsquo;t get visa till 5th July. So I don&rsquo;t think, I would make it to debconf this year. I will certainly attend Debconf 2017.
Good news for me is I have passed mid-term evaluations of Google Summer of Code 2016. I will continue my work to improve Debian.
Even, I have post GSoC plans ready for Debian project ;)</p>

<p>Have a nice day :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC 2016 Week 2 and 3: Reproducible Builds in Debian]]></title>
    <link href="http://satyamz.github.io/blog/2016/06/13/gsoc-2016-week-2-and-3-reproducible-builds-in-debian/"/>
    <updated>2016-06-13T22:52:09+05:30</updated>
    <id>http://satyamz.github.io/blog/2016/06/13/gsoc-2016-week-2-and-3-reproducible-builds-in-debian</id>
    <content type="html"><![CDATA[<p>This is report on my previous week activities with Debian Reproducible-Builds.</p>

<!-- more -->


<p>In last 10 days, I had build different Debain packages at my own using prebuilder to experience the reproducibility issues.
I am thankful to deki and Lunar for suggesting me to do that task. Based on this experience, I managed to find more use cases for <a href="https://wiki.debian.org/ReproducibleBuilds/HideProfilesSpecification">&ndash;hide=profiles specification</a>.</p>

<p>I also researched differences of different unreproducible Debian packages on <a href="http://tests.reproducible-builds.org">http://tests.reproducible-builds.org</a> . There are many packages available for examination.</p>

<p>In brief I did following tasks:</p>

<ul>
<li>I worked on <a href="https://wiki.debian.org/ReproducibleBuilds/HideProfilesSpecification">&ndash;hide=profiles specification</a>. Mostly, I tried to find use cases.</li>
<li>I made changes to <a href="https://wiki.debian.org/ReproducibleBuilds/HideProfilesSpecification">https://wiki.debian.org/ReproducibleBuilds/HideProfilesSpecification</a> added detailed information in each use case.</li>
<li>Read documentation on <code>argcomplete</code> python module and had some hands on experience with module. Purpose of doing this was to add argument completion feature to Diffoscope. pabs had filed bug report for this <a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=826711">#826711</a>. I am implementing this feature and discussing issues with pabs as well as researching diffs side-by-side to generate more use cases. Here, Thanks to pabs for guidance and support :)</li>
<li>I went through different software to see how they are ignoring the stuff. Those are following:

<ul>
<li><a href="https://github.com/WhisperSystems/Signal-Android/blob/master/apkdiff/apkdiff.py">apkdiff</a></li>
<li><a href="https://github.com/openSUSE/build-compare">pkg-diff</a></li>
<li><a href="http://git.gag.com/?p=debian/tar;a=tree">tar</a></li>
</ul>
</li>
</ul>


<p>Upcoming week will be an important as well as fun week because I will be implementing the use cases. Right now, I am currently looking at different softwares which ignores stuff and taking <a href="https://gist.github.com/satyamz/77d86e1fc78d104c784c0238a3a7c0e3">notes</a> of it. So that, it will help me during implementing solution of use cases.
I am also looking forward to <a href="http://lists.alioth.debian.org/pipermail/reproducible-builds/Week-of-Mon-20160606/005774.html">feedback</a> from community on use cases and CLI interfaces.
Have a great week :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GSoC 2016 Week 1: Reproducible Builds in Debian]]></title>
    <link href="http://satyamz.github.io/blog/2016/06/02/gsoc-2016-week-1-reproducible-builds-in-debian/"/>
    <updated>2016-06-02T23:48:14+05:30</updated>
    <id>http://satyamz.github.io/blog/2016/06/02/gsoc-2016-week-1-reproducible-builds-in-debian</id>
    <content type="html"><![CDATA[<p>This is a concise report on my previous week.</p>

<!-- more -->


<p>I started working from 28 May as the exams ended. This report is bit late. I started work on &ndash;hide=profiles flag.
Till now, I did/doing following tasks:</p>

<ul>
<li>Read documentation related to argparse python module.</li>
<li>Debug the code to find the ways to implement the solution</li>
<li>Discussed the problem with the community.</li>
<li>Based on progress I have pushed some code <a href="http://deb.li/ZNDE">here</a> (work is in progress)</li>
</ul>


<p>Lunar suggested me to create the specification for &ndash;hide=profiles.
It can be found here <a href="https://wiki.debian.org/ReproducibleBuilds/HideProfilesSpecification">https://wiki.debian.org/ReproducibleBuilds/HideProfilesSpecification</a></p>

<p>General purpose of addition of &ndash;hide=profiles to diffoscope is because we want to provide an alternative for tool like <a href="https://github.com/openSUSE/build-compare">OBS pkg-diff</a>. We want to increase userbase of diffoscope and thus number of contributors. Hopefully, I will finish this part as soon as possible.</p>

<p>We are still discussing, how things should be done!
Right now, I am researching diff of unreproducible packages and trying to develop use cases. I will update the <a href="https://wiki.debian.org/ReproducibleBuilds/HideProfilesSpecification">HideProfilesSpecification</a> wiki with my findings.
Lunar has given me a proper directions and community is very much helpful. :)</p>

<p>My goal for  an upcoming week is to search for packages which are unreproducible and generate use cases for diffoscope.
This week I will also try to fix the reproducibility of Debian packages.</p>

<p>I am loving, contributing to Debian and free software and it&rsquo;s a great learning experience. Many things to come in upcoming time :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Summer of Code 2016 With Debian Reproducible Builds : Introduction]]></title>
    <link href="http://satyamz.github.io/blog/2016/05/08/google-summer-of-code-2016-with-debian-reproducible-builds-introduction/"/>
    <updated>2016-05-08T17:45:22+05:30</updated>
    <id>http://satyamz.github.io/blog/2016/05/08/google-summer-of-code-2016-with-debian-reproducible-builds-introduction</id>
    <content type="html"><![CDATA[<p>This is the first blog post among series of posts which I will be writing throughout the summer about Google Summer of Code 2016 under Debian Reproducible Builds Experience.</p>

<!-- more -->


<h3>Introduction:</h3>

<p>I am <strong>Satyam Zode</strong> I am a final year Computer Science student (Satyam_z on IRC). I live in Pune, India (GMT +5:30). I am pursuing my undergraduate degree in Computer Engineering from <a href="http://pict.edu"><strong>Pune Institute of Computer Technology, Pune</strong></a>. I have been programming for the past 4 years. I am well versed in C/C++, Python3, and Golang. My Alioth and Github handles are <a href="https://alioth.debian.org/users/satyamz-guest/">satyamz-guest</a> and <a href="https://github.com/satyamz">satyamz</a> respectively. I have been using GNU/Linux and free software from last four years. I am an open source enthusiast and I have been following <a href="http://www.catb.org/esr/faqs/hacker-howto.html"><strong>Hacker culture</strong></a> since past three years.</p>

<h3>Accepted into Google Summer of Code 2016 under Debian Project:</h3>

<p>I am glad that I have got an opportunity to contribute to the Debian Project via Google Summer of Code 2016. I am accepted for project <a href="https://summerofcode.withgoogle.com/projects/#4739621762105344"><strong>Improving diffoscope tool and reproducibility of Debian packages</strong></a>. This Summer and beyond I will be working with Debian Reproducible Builds team to improve the debbugging tool called <a href="https://diffoscope.org"><strong>Diffoscope</strong></a> (previously known as debbindiff).
Thanks a bunch to Debian community, Lunar, Holger Levsen, Reiner Herrmann, Mattia Rizzolo and <a href="https://wiki.debian.org/ReproducibleBuilds">reproducible-builds</a> folks for giving me this opportunity. Here is my GSoC'16 <a href="https://wiki.debian.org/SummerOfCode2016/StudentApplications/SatyamZode">Proposal</a>. And Yay! It really feels great.</p>

<h3>Project details:</h3>

<p>I will be working on Diffoscope tool which is debbugging tool developed under <a href="https://wiki.debian.org/ReproducibleBuilds"><strong>reproducible-builds</strong></a> effort.
Basically, Diffoscope compares two files and shows the difference in text and html format. Diffoscope is mainly developed to compare two Debian packages which may consist of binary files, tar files, text files etc. Diffoscope helps to identify difference between two Debian packages with respect to timestamps, file ordering etc. Diffoscope will try to get to the bottom of what makes files or directories different. It will recursively unpack archives of many kinds and transform various binary formats into more human readable form to compare them. It can compare two tarballs, ISO images, Debian packages or PDF just as easily.
Diffoscope helps to identify the reproduciblity of Debian packages.
During this summer I will be improving Diffoscope. I will be mainly working on:</p>

<ul>
<li>Finish Parallel processing part.</li>
<li>Add command line option  - -ignore-profile to allow users to ignore arbitrary differences.</li>
<li>perform fuzzy-matching across archives.</li>
<li>Add new file comparators to extend support of diffoscope for new file types.</li>
</ul>


<p>My next blog post will be regarding community bonding. Thanks for reading :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Beginning]]></title>
    <link href="http://satyamz.github.io/blog/2016/01/06/new-year/"/>
    <updated>2016-01-06T00:41:48+05:30</updated>
    <id>http://satyamz.github.io/blog/2016/01/06/new-year</id>
    <content type="html"><![CDATA[<h2>The beginning</h2>

<p>First of all, Happy new year! I will be blogging here.</p>


<!-- more -->


<p>I have had pretty much tough time in 2015, but now starting everything from beginning. I hope 2016 will bring more happiness in your life.</p>




<p>Writing a blog is just an another item of my new year resolution list. Though list is quite long and I will try to reflect other items in the list here. So stay tuned!</p>

]]></content>
  </entry>
  
</feed>
